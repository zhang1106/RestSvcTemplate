//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AiDollar.Infrastructure.Wcf.PermissionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBID {
            get {
                return this.BBIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BBIDField, value) != true)) {
                    this.BBIDField = value;
                    this.RaisePropertyChanged("BBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StrategyInfo", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class StrategyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrategyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StrategyTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Level {
            get {
                return this.LevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelField, value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PMCode {
            get {
                return this.PMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PMCodeField, value) != true)) {
                    this.PMCodeField = value;
                    this.RaisePropertyChanged("PMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrategyCode {
            get {
                return this.StrategyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StrategyCodeField, value) != true)) {
                    this.StrategyCodeField = value;
                    this.RaisePropertyChanged("StrategyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StrategyType {
            get {
                return this.StrategyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StrategyTypeField, value) != true)) {
                    this.StrategyTypeField = value;
                    this.RaisePropertyChanged("StrategyType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionInfo", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class PermissionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeafLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermssionSourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeafLevel {
            get {
                return this.LeafLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LeafLevelField, value) != true)) {
                    this.LeafLevelField = value;
                    this.RaisePropertyChanged("LeafLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionCategory {
            get {
                return this.PermissionCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionCategoryField, value) != true)) {
                    this.PermissionCategoryField = value;
                    this.RaisePropertyChanged("PermissionCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionName {
            get {
                return this.PermissionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionNameField, value) != true)) {
                    this.PermissionNameField = value;
                    this.RaisePropertyChanged("PermissionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionPath {
            get {
                return this.PermissionPathField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionPathField, value) != true)) {
                    this.PermissionPathField = value;
                    this.RaisePropertyChanged("PermissionPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionType {
            get {
                return this.PermissionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionTypeField, value) != true)) {
                    this.PermissionTypeField = value;
                    this.RaisePropertyChanged("PermissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermssionSource {
            get {
                return this.PermssionSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.PermssionSourceField, value) != true)) {
                    this.PermssionSourceField = value;
                    this.RaisePropertyChanged("PermssionSource");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationType", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    public enum OperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleInStrategy = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleInTeam = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserExtension", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class UserExtension : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BBIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BBID {
            get {
                return this.BBIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BBIDField, value) != true)) {
                    this.BBIDField = value;
                    this.RaisePropertyChanged("BBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionType", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    public enum PermissionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Module = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Report = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Function = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Team", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class Team : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamRole", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class TeamRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamType {
            get {
                return this.TeamTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamTypeField, value) != true)) {
                    this.TeamTypeField = value;
                    this.RaisePropertyChanged("TeamType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamMember", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class TeamMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCode {
            get {
                return this.RoleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCodeField, value) != true)) {
                    this.RoleCodeField = value;
                    this.RaisePropertyChanged("RoleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamCode {
            get {
                return this.TeamCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamCodeField, value) != true)) {
                    this.TeamCodeField = value;
                    this.RaisePropertyChanged("TeamCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionDef", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class PermissionDef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class Permission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SysUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityCode {
            get {
                return this.EntityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityCodeField, value) != true)) {
                    this.EntityCodeField = value;
                    this.RaisePropertyChanged("EntityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityType {
            get {
                return this.EntityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityTypeField, value) != true)) {
                    this.EntityTypeField = value;
                    this.RaisePropertyChanged("EntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionCode {
            get {
                return this.PermissionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionCodeField, value) != true)) {
                    this.PermissionCodeField = value;
                    this.RaisePropertyChanged("PermissionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionType {
            get {
                return this.PermissionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionTypeField, value) != true)) {
                    this.PermissionTypeField = value;
                    this.RaisePropertyChanged("PermissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionValue {
            get {
                return this.PermissionValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionValueField, value) != true)) {
                    this.PermissionValueField = value;
                    this.RaisePropertyChanged("PermissionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SysUser {
            get {
                return this.SysUserField;
            }
            set {
                if ((object.ReferenceEquals(this.SysUserField, value) != true)) {
                    this.SysUserField = value;
                    this.RaisePropertyChanged("SysUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionDetail", Namespace="http://schemas.datacontract.org/2004/07/PermissionCore.Model")]
    [System.SerializableAttribute()]
    public partial class PermissionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionName {
            get {
                return this.PermissionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionNameField, value) != true)) {
                    this.PermissionNameField = value;
                    this.RaisePropertyChanged("PermissionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Wcf.PermissionService.PermissionService")]
    public interface PermissionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUsers", ReplyAction="http://tempuri.org/PermissionService/GetUsersResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[] GetUsers(string permissionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUsers", ReplyAction="http://tempuri.org/PermissionService/GetUsersResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[]> GetUsersAsync(string permissionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUserInfo", ReplyAction="http://tempuri.org/PermissionService/GetUserInfoResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.UserInfo GetUserInfo(string pLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUserInfo", ReplyAction="http://tempuri.org/PermissionService/GetUserInfoResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo> GetUserInfoAsync(string pLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllUsers", ReplyAction="http://tempuri.org/PermissionService/GetAllUsersResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllUsers", ReplyAction="http://tempuri.org/PermissionService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/CheckUserPermission", ReplyAction="http://tempuri.org/PermissionService/CheckUserPermissionResponse")]
        bool CheckUserPermission(string pLoginName, string pPermissionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/CheckUserPermission", ReplyAction="http://tempuri.org/PermissionService/CheckUserPermissionResponse")]
        System.Threading.Tasks.Task<bool> CheckUserPermissionAsync(string pLoginName, string pPermissionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetStrategies", ReplyAction="http://tempuri.org/PermissionService/GetStrategiesResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[] GetStrategies(string pLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetStrategies", ReplyAction="http://tempuri.org/PermissionService/GetStrategiesResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[]> GetStrategiesAsync(string pLoginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionTypes", ReplyAction="http://tempuri.org/PermissionService/GetPermissionTypesResponse")]
        string[] GetPermissionTypes(string pLoginName, string permissionCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionTypes", ReplyAction="http://tempuri.org/PermissionService/GetPermissionTypesResponse")]
        System.Threading.Tasks.Task<string[]> GetPermissionTypesAsync(string pLoginName, string permissionCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissions", ReplyAction="http://tempuri.org/PermissionService/GetPermissionsResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetPermissions(string pLoginName, string pPermissionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissions", ReplyAction="http://tempuri.org/PermissionService/GetPermissionsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetPermissionsAsync(string pLoginName, string pPermissionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetSpecialPermissions", ReplyAction="http://tempuri.org/PermissionService/GetSpecialPermissionsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.UserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.OperationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.Permission[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.Permission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetSpecialPermissions(AiDollar.Infrastructure.Wcf.PermissionService.OperationType pOperation, object[] paramList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetSpecialPermissions", ReplyAction="http://tempuri.org/PermissionService/GetSpecialPermissionsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetSpecialPermissionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.OperationType pOperation, object[] paramList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveUserExtensions", ReplyAction="http://tempuri.org/PermissionService/SaveUserExtensionsResponse")]
        bool SaveUserExtensions(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension[] userExtensions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveUserExtensions", ReplyAction="http://tempuri.org/PermissionService/SaveUserExtensionsResponse")]
        System.Threading.Tasks.Task<bool> SaveUserExtensionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension[] userExtensions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/CheckPermission", ReplyAction="http://tempuri.org/PermissionService/CheckPermissionResponse")]
        bool CheckPermission(string pEntityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/CheckPermission", ReplyAction="http://tempuri.org/PermissionService/CheckPermissionResponse")]
        System.Threading.Tasks.Task<bool> CheckPermissionAsync(string pEntityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllStrategies", ReplyAction="http://tempuri.org/PermissionService/GetAllStrategiesResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[] GetAllStrategies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllStrategies", ReplyAction="http://tempuri.org/PermissionService/GetAllStrategiesResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[]> GetAllStrategiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetReferenceData", ReplyAction="http://tempuri.org/PermissionService/GetReferenceDataResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetReferenceData(AiDollar.Infrastructure.Wcf.PermissionService.PermissionType pPermissionTypeEnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetReferenceData", ReplyAction="http://tempuri.org/PermissionService/GetReferenceDataResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetReferenceDataAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionType pPermissionTypeEnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/ChecktModulePermission", ReplyAction="http://tempuri.org/PermissionService/ChecktModulePermissionResponse")]
        bool ChecktModulePermission(string pModuleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/ChecktModulePermission", ReplyAction="http://tempuri.org/PermissionService/ChecktModulePermissionResponse")]
        System.Threading.Tasks.Task<bool> ChecktModulePermissionAsync(string pModuleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeams", ReplyAction="http://tempuri.org/PermissionService/GetTeamsResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.Team[] GetTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeams", ReplyAction="http://tempuri.org/PermissionService/GetTeamsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Team[]> GetTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeamRoles", ReplyAction="http://tempuri.org/PermissionService/GetTeamRolesResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[] GetTeamRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeamRoles", ReplyAction="http://tempuri.org/PermissionService/GetTeamRolesResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[]> GetTeamRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetMembers", ReplyAction="http://tempuri.org/PermissionService/GetMembersResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] GetMembers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetMembers", ReplyAction="http://tempuri.org/PermissionService/GetMembersResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[]> GetMembersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionDefs", ReplyAction="http://tempuri.org/PermissionService/GetPermissionDefsResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[] GetPermissionDefs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionDefs", ReplyAction="http://tempuri.org/PermissionService/GetPermissionDefsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[]> GetPermissionDefsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllPermissions", ReplyAction="http://tempuri.org/PermissionService/GetAllPermissionsResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.Permission[] GetAllPermissions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetAllPermissions", ReplyAction="http://tempuri.org/PermissionService/GetAllPermissionsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Permission[]> GetAllPermissionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeam", ReplyAction="http://tempuri.org/PermissionService/SaveTeamResponse")]
        bool SaveTeam(AiDollar.Infrastructure.Wcf.PermissionService.Team team, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeam", ReplyAction="http://tempuri.org/PermissionService/SaveTeamResponse")]
        System.Threading.Tasks.Task<bool> SaveTeamAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeleteTeam", ReplyAction="http://tempuri.org/PermissionService/DeleteTeamResponse")]
        bool DeleteTeam(AiDollar.Infrastructure.Wcf.PermissionService.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeleteTeam", ReplyAction="http://tempuri.org/PermissionService/DeleteTeamResponse")]
        System.Threading.Tasks.Task<bool> DeleteTeamAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeamRole", ReplyAction="http://tempuri.org/PermissionService/SaveTeamRoleResponse")]
        bool SaveTeamRole(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole newTeamRole, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeamRole", ReplyAction="http://tempuri.org/PermissionService/SaveTeamRoleResponse")]
        System.Threading.Tasks.Task<bool> SaveTeamRoleAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole newTeamRole, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeleteTeamRole", ReplyAction="http://tempuri.org/PermissionService/DeleteTeamRoleResponse")]
        bool DeleteTeamRole(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole teamRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeleteTeamRole", ReplyAction="http://tempuri.org/PermissionService/DeleteTeamRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteTeamRoleAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole teamRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeamMembers", ReplyAction="http://tempuri.org/PermissionService/SaveTeamMembersResponse")]
        bool SaveTeamMembers(string teamCode, AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] teamMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SaveTeamMembers", ReplyAction="http://tempuri.org/PermissionService/SaveTeamMembersResponse")]
        System.Threading.Tasks.Task<bool> SaveTeamMembersAsync(string teamCode, AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] teamMembers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SavePermissionDef", ReplyAction="http://tempuri.org/PermissionService/SavePermissionDefResponse")]
        bool SavePermissionDef(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef newPermissonDef, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SavePermissionDef", ReplyAction="http://tempuri.org/PermissionService/SavePermissionDefResponse")]
        System.Threading.Tasks.Task<bool> SavePermissionDefAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef newPermissonDef, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeletePermissionDef", ReplyAction="http://tempuri.org/PermissionService/DeletePermissionDefResponse")]
        bool DeletePermissionDef(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeletePermissionDef", ReplyAction="http://tempuri.org/PermissionService/DeletePermissionDefResponse")]
        System.Threading.Tasks.Task<bool> DeletePermissionDefAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SavePermissions", ReplyAction="http://tempuri.org/PermissionService/SavePermissionsResponse")]
        bool SavePermissions(AiDollar.Infrastructure.Wcf.PermissionService.Permission[] permissions, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/SavePermissions", ReplyAction="http://tempuri.org/PermissionService/SavePermissionsResponse")]
        System.Threading.Tasks.Task<bool> SavePermissionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission[] permissions, bool isNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeletePermission", ReplyAction="http://tempuri.org/PermissionService/DeletePermissionResponse")]
        bool DeletePermission(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/DeletePermission", ReplyAction="http://tempuri.org/PermissionService/DeletePermissionResponse")]
        System.Threading.Tasks.Task<bool> DeletePermissionAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUserPermissions", ReplyAction="http://tempuri.org/PermissionService/GetUserPermissionsResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail[] GetUserPermissions(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetUserPermissions", ReplyAction="http://tempuri.org/PermissionService/GetUserPermissionsResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail[]> GetUserPermissionsAsync(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/RecalculatePermissions", ReplyAction="http://tempuri.org/PermissionService/RecalculatePermissionsResponse")]
        bool RecalculatePermissions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/RecalculatePermissions", ReplyAction="http://tempuri.org/PermissionService/RecalculatePermissionsResponse")]
        System.Threading.Tasks.Task<bool> RecalculatePermissionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeamsAudit", ReplyAction="http://tempuri.org/PermissionService/GetTeamsAuditResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.Team[] GetTeamsAudit(AiDollar.Infrastructure.Wcf.PermissionService.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetTeamsAudit", ReplyAction="http://tempuri.org/PermissionService/GetTeamsAuditResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Team[]> GetTeamsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetRolesAudit", ReplyAction="http://tempuri.org/PermissionService/GetRolesAuditResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[] GetRolesAudit(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetRolesAudit", ReplyAction="http://tempuri.org/PermissionService/GetRolesAuditResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[]> GetRolesAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetMembersAudit", ReplyAction="http://tempuri.org/PermissionService/GetMembersAuditResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] GetMembersAudit(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetMembersAudit", ReplyAction="http://tempuri.org/PermissionService/GetMembersAuditResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[]> GetMembersAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember member);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionDefsAudit", ReplyAction="http://tempuri.org/PermissionService/GetPermissionDefsAuditResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[] GetPermissionDefsAudit(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionDefsAudit", ReplyAction="http://tempuri.org/PermissionService/GetPermissionDefsAuditResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[]> GetPermissionDefsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionsAudit", ReplyAction="http://tempuri.org/PermissionService/GetPermissionsAuditResponse")]
        AiDollar.Infrastructure.Wcf.PermissionService.Permission[] GetPermissionsAudit(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PermissionService/GetPermissionsAudit", ReplyAction="http://tempuri.org/PermissionService/GetPermissionsAuditResponse")]
        System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Permission[]> GetPermissionsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PermissionServiceChannel : AiDollar.Infrastructure.Wcf.PermissionService.PermissionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionServiceClient : System.ServiceModel.ClientBase<AiDollar.Infrastructure.Wcf.PermissionService.PermissionService>, AiDollar.Infrastructure.Wcf.PermissionService.PermissionService {
        
        public PermissionServiceClient() {
        }
        
        public PermissionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermissionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[] GetUsers(string permissionName) {
            return base.Channel.GetUsers(permissionName);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[]> GetUsersAsync(string permissionName) {
            return base.Channel.GetUsersAsync(permissionName);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.UserInfo GetUserInfo(string pLoginName) {
            return base.Channel.GetUserInfo(pLoginName);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo> GetUserInfoAsync(string pLoginName) {
            return base.Channel.GetUserInfoAsync(pLoginName);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.UserInfo[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public bool CheckUserPermission(string pLoginName, string pPermissionName) {
            return base.Channel.CheckUserPermission(pLoginName, pPermissionName);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserPermissionAsync(string pLoginName, string pPermissionName) {
            return base.Channel.CheckUserPermissionAsync(pLoginName, pPermissionName);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[] GetStrategies(string pLoginName) {
            return base.Channel.GetStrategies(pLoginName);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[]> GetStrategiesAsync(string pLoginName) {
            return base.Channel.GetStrategiesAsync(pLoginName);
        }
        
        public string[] GetPermissionTypes(string pLoginName, string permissionCategory) {
            return base.Channel.GetPermissionTypes(pLoginName, permissionCategory);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPermissionTypesAsync(string pLoginName, string permissionCategory) {
            return base.Channel.GetPermissionTypesAsync(pLoginName, permissionCategory);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetPermissions(string pLoginName, string pPermissionType) {
            return base.Channel.GetPermissions(pLoginName, pPermissionType);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetPermissionsAsync(string pLoginName, string pPermissionType) {
            return base.Channel.GetPermissionsAsync(pLoginName, pPermissionType);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetSpecialPermissions(AiDollar.Infrastructure.Wcf.PermissionService.OperationType pOperation, object[] paramList) {
            return base.Channel.GetSpecialPermissions(pOperation, paramList);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetSpecialPermissionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.OperationType pOperation, object[] paramList) {
            return base.Channel.GetSpecialPermissionsAsync(pOperation, paramList);
        }
        
        public bool SaveUserExtensions(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension[] userExtensions) {
            return base.Channel.SaveUserExtensions(userExtensions);
        }
        
        public System.Threading.Tasks.Task<bool> SaveUserExtensionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.UserExtension[] userExtensions) {
            return base.Channel.SaveUserExtensionsAsync(userExtensions);
        }
        
        public bool CheckPermission(string pEntityName) {
            return base.Channel.CheckPermission(pEntityName);
        }
        
        public System.Threading.Tasks.Task<bool> CheckPermissionAsync(string pEntityName) {
            return base.Channel.CheckPermissionAsync(pEntityName);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[] GetAllStrategies() {
            return base.Channel.GetAllStrategies();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.StrategyInfo[]> GetAllStrategiesAsync() {
            return base.Channel.GetAllStrategiesAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[] GetReferenceData(AiDollar.Infrastructure.Wcf.PermissionService.PermissionType pPermissionTypeEnum) {
            return base.Channel.GetReferenceData(pPermissionTypeEnum);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionInfo[]> GetReferenceDataAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionType pPermissionTypeEnum) {
            return base.Channel.GetReferenceDataAsync(pPermissionTypeEnum);
        }
        
        public bool ChecktModulePermission(string pModuleName) {
            return base.Channel.ChecktModulePermission(pModuleName);
        }
        
        public System.Threading.Tasks.Task<bool> ChecktModulePermissionAsync(string pModuleName) {
            return base.Channel.ChecktModulePermissionAsync(pModuleName);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.Team[] GetTeams() {
            return base.Channel.GetTeams();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Team[]> GetTeamsAsync() {
            return base.Channel.GetTeamsAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[] GetTeamRoles() {
            return base.Channel.GetTeamRoles();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[]> GetTeamRolesAsync() {
            return base.Channel.GetTeamRolesAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] GetMembers() {
            return base.Channel.GetMembers();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[]> GetMembersAsync() {
            return base.Channel.GetMembersAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[] GetPermissionDefs() {
            return base.Channel.GetPermissionDefs();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[]> GetPermissionDefsAsync() {
            return base.Channel.GetPermissionDefsAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.Permission[] GetAllPermissions() {
            return base.Channel.GetAllPermissions();
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Permission[]> GetAllPermissionsAsync() {
            return base.Channel.GetAllPermissionsAsync();
        }
        
        public bool SaveTeam(AiDollar.Infrastructure.Wcf.PermissionService.Team team, bool isNew) {
            return base.Channel.SaveTeam(team, isNew);
        }
        
        public System.Threading.Tasks.Task<bool> SaveTeamAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team, bool isNew) {
            return base.Channel.SaveTeamAsync(team, isNew);
        }
        
        public bool DeleteTeam(AiDollar.Infrastructure.Wcf.PermissionService.Team team) {
            return base.Channel.DeleteTeam(team);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTeamAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team) {
            return base.Channel.DeleteTeamAsync(team);
        }
        
        public bool SaveTeamRole(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole newTeamRole, bool isNew) {
            return base.Channel.SaveTeamRole(newTeamRole, isNew);
        }
        
        public System.Threading.Tasks.Task<bool> SaveTeamRoleAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole newTeamRole, bool isNew) {
            return base.Channel.SaveTeamRoleAsync(newTeamRole, isNew);
        }
        
        public bool DeleteTeamRole(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole teamRole) {
            return base.Channel.DeleteTeamRole(teamRole);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTeamRoleAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole teamRole) {
            return base.Channel.DeleteTeamRoleAsync(teamRole);
        }
        
        public bool SaveTeamMembers(string teamCode, AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] teamMembers) {
            return base.Channel.SaveTeamMembers(teamCode, teamMembers);
        }
        
        public System.Threading.Tasks.Task<bool> SaveTeamMembersAsync(string teamCode, AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] teamMembers) {
            return base.Channel.SaveTeamMembersAsync(teamCode, teamMembers);
        }
        
        public bool SavePermissionDef(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef newPermissonDef, bool isNew) {
            return base.Channel.SavePermissionDef(newPermissonDef, isNew);
        }
        
        public System.Threading.Tasks.Task<bool> SavePermissionDefAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef newPermissonDef, bool isNew) {
            return base.Channel.SavePermissionDefAsync(newPermissonDef, isNew);
        }
        
        public bool DeletePermissionDef(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef) {
            return base.Channel.DeletePermissionDef(permissionDef);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePermissionDefAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef) {
            return base.Channel.DeletePermissionDefAsync(permissionDef);
        }
        
        public bool SavePermissions(AiDollar.Infrastructure.Wcf.PermissionService.Permission[] permissions, bool isNew) {
            return base.Channel.SavePermissions(permissions, isNew);
        }
        
        public System.Threading.Tasks.Task<bool> SavePermissionsAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission[] permissions, bool isNew) {
            return base.Channel.SavePermissionsAsync(permissions, isNew);
        }
        
        public bool DeletePermission(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission) {
            return base.Channel.DeletePermission(permission);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePermissionAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission) {
            return base.Channel.DeletePermissionAsync(permission);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail[] GetUserPermissions(string loginName) {
            return base.Channel.GetUserPermissions(loginName);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDetail[]> GetUserPermissionsAsync(string loginName) {
            return base.Channel.GetUserPermissionsAsync(loginName);
        }
        
        public bool RecalculatePermissions() {
            return base.Channel.RecalculatePermissions();
        }
        
        public System.Threading.Tasks.Task<bool> RecalculatePermissionsAsync() {
            return base.Channel.RecalculatePermissionsAsync();
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.Team[] GetTeamsAudit(AiDollar.Infrastructure.Wcf.PermissionService.Team team) {
            return base.Channel.GetTeamsAudit(team);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Team[]> GetTeamsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.Team team) {
            return base.Channel.GetTeamsAuditAsync(team);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[] GetRolesAudit(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole role) {
            return base.Channel.GetRolesAudit(role);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamRole[]> GetRolesAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamRole role) {
            return base.Channel.GetRolesAuditAsync(role);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[] GetMembersAudit(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember member) {
            return base.Channel.GetMembersAudit(member);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.TeamMember[]> GetMembersAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.TeamMember member) {
            return base.Channel.GetMembersAuditAsync(member);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[] GetPermissionDefsAudit(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef) {
            return base.Channel.GetPermissionDefsAudit(permissionDef);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef[]> GetPermissionDefsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.PermissionDef permissionDef) {
            return base.Channel.GetPermissionDefsAuditAsync(permissionDef);
        }
        
        public AiDollar.Infrastructure.Wcf.PermissionService.Permission[] GetPermissionsAudit(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission) {
            return base.Channel.GetPermissionsAudit(permission);
        }
        
        public System.Threading.Tasks.Task<AiDollar.Infrastructure.Wcf.PermissionService.Permission[]> GetPermissionsAuditAsync(AiDollar.Infrastructure.Wcf.PermissionService.Permission permission) {
            return base.Channel.GetPermissionsAuditAsync(permission);
        }
    }
}
